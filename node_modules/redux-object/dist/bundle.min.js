module.exports=(()=>{"use strict";var e={961:(e,r,t)=>{function n(e){return!(!e||"function"!=typeof e.hasOwnProperty||!(e.hasOwnProperty("__ownerID")||e._map&&e._map.hasOwnProperty("__ownerID")))}function i(e,r){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(Array.isArray(r)||(r=[r]),n(e)){var i=e.getIn(r.map((function(e){return"".concat(e)})));return t&&i?i.toJS():i}return r.reduce((function(e,r){return e[r]}),e)}function o(e){return n(e)?e.keySeq().toArray():Object.keys(e)}function a(e,r){return r?"".concat(e).concat(r):null}function u(e,r,t,n,i){var o=n.ignoreLinks,a=r.relationships[t];if(void 0!==a.data)return Array.isArray(a.data)?a.data.map((function(r){return l(e,r.type,r.id,n,i)||r})):null===a.data?null:l(e,a.data.type,a.data.id,n,i)||a.data;if(!o&&a.links)throw new Error("Remote lazy loading is not supported (see: https://github.com/yury-dymov/json-api-normalizer/issues/2). To disable this error, include option 'ignoreLinks: true' in the build function like so: build(reducer, type, id, { ignoreLinks: true })")}function l(e,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},d={eager:!1,ignoreLinks:!1,includeType:!1},c=Object.assign({},d,n),p=c.eager,y=c.includeType;if(!i(e,r))return null;if(null===t||Array.isArray(t)){var f=t||o(i(e,r));return f.map((function(t){return l(e,r,t,c,s)}))}var b=t.toString(),v=a(r,b),g=s[v];if(g)return g;var m={},h=i(e,[r,b],!0);return h?(h.id&&(m.id=h.id),h.attributes&&(Object.keys(h.attributes).forEach((function(e){m[e]=h.attributes[e]})),Object.defineProperty(m,"resolved",{value:!0})),h.meta&&(m.meta=h.meta),h.links&&(m.links=h.links),y&&!m.type&&(m.type=r),s[v]=m,h.relationships&&Object.keys(h.relationships).forEach((function(r){p?m[r]=u(e,h,r,c,s):Object.defineProperty(m,r,{enumerable:!0,get:function(){var t="__".concat(r);if(m[t])return m[t];var n=u(e,h,r,c,s);return Object.defineProperty(m,t,{enumerable:!1,value:n}),m[t]}})})),void 0===m.id&&(m.id=b),m):null}t.r(r),t.d(r,{default:()=>l})}},r={};function t(n){if(r[n])return r[n].exports;var i=r[n]={exports:{}};return e[n](i,i.exports,t),i.exports}return t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t(961)})();