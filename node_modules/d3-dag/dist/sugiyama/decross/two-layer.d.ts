/**
 * Create a decrossing operator that minimizes the number of decrossings
 * heuristically by looking at each pair of layers. This method is very fast and very general and pften produces good results. It is also highly customizable, and can be parametrized by any [["sugiyama/twolayer/index" | two layer operator]].
 *
 * Create a new [[TwoLayerOperator]] with [[twoLayer]].
 *
 * <img alt="two layer example" src="media://two_layer_greedy.png" width="400">
 *
 * @packageDocumentation
 */
import { MedianOperator } from "../twolayer/median";
import { DagNode } from "../../dag/node";
import { Operator } from ".";
import { Operator as OrderOperator } from "../twolayer";
export interface TwoLayerOperator<NodeType extends DagNode, TwoLayer extends OrderOperator<NodeType> = OrderOperator<NodeType>> extends Operator<NodeType> {
    /**
     * Sets the order accessor to the specified [[OrderOperator]] and returns
     * this [[TwoLayerOperator]]. See the [["sugiyama/twolayer/index" | two
     * layer]] module for more information on order operators.
     */
    order<NewTwoLayer extends OrderOperator<NodeType>>(ord: NewTwoLayer): TwoLayerOperator<NodeType, NewTwoLayer>;
    /**
     * Get the current [[OrderOperator]] which defaults to [[median]].
     */
    order(): TwoLayer;
}
/** Create a default [[TwoLayerOperator]]. */
export declare function twoLayer<NodeType extends DagNode>(...args: never[]): TwoLayerOperator<NodeType, MedianOperator<NodeType>>;
